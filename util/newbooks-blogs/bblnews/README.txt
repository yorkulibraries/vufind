NewBooks 1.4
2014-03-26
================================================

General Information
--------------------
NewBooks gathers and merges information about new
acquired books at the Osgoode Hall Law School Library
from York Library and Google Books API, to generate
a weekly WordPress blog post to the Library Blog.

To execute the script, run:

    index.php

via the PHP interpreter and APACHE.

This script will output the generated HTML, and
post the HTML to the blog as a post.

Prerequisites
--------------------

    APACHE or equivalent web server
    PHP 5.4.0 or later
    WordPress with XML-RPC enabled
    Scheduler Tasks in Windows or equivalent

Setup
--------------------
To install in a new environment:

1.  Copy the script folder "newbooks" and all of its contents
    to the web folder (i.e.: C:\wamp\www) of the web server.
*2. Ensure that the .htaccess contains the following:

        Order Deny,Allow
        Deny from all
        Allow from localhost
        # END WordPress

*3. Update the configuration setting within config.json.
    Ensure specifically that

        clientURI
        wpUser
        wpPasswd
        googleBooksAPIKey

    are correct, before proceeding.
4.  Ensure the permissions of the folders and files are set so
    that they are readable and accessible to the web server.
5.  Configure the Scheduler Tasks in Windows, as follows (for example):

        Action:             Start a program
        Program/script:     C:\wamp\bin\php\phpX.X.X\php.exe
        Arguments:          -c "C:\wamp\bin\apache\apacheX.X.X\bin" "C:\wamp\www\path\to\newbooks\index.php"
        Start in:           C:\wamp\www\path\to\newbooks\

Configurations
--------------------
The script's behaviour can be modify by changing
the configuration values in config.json. The
available configurable settings are:

  Uniform resource identifiers:

    catalogURI          template of the URI to the York Library catalog
    clientURI           URI to the WordPress blog XML-RPC.

  Data Sources:

    yorklibBiblioUri    template of the RESTful API query to
                        the York Library books data source
    googleBooksAPIUri   template of the RESTful API query to
                        the Google Books API data source
    googleBooksAPIKey   Google Book API key to access RESTful data source

  WordPress Credentials:

    wpUser              WordPress username
    wpPasswd            WordPress password

  Template Sources:

    postTmplSrc         file path to the template HTML for the entire post
    bookItemTmplSrc     file path to the template HTML for each book
    thumbnail1TmplSrc   file path to the template HTML for the book thumbnail
                        if image is available via Google Books
    thumbnail2TmplSrc   file path to the template HTML for the book thumbnail
                        if image is not available via Google Books

  Debugging:

    isDebug             boolean flag to enable and disable debug features
    yorklibCacheSrc     template of file path to the York Library raw data cache
    googleBooksCacheSrc template of file path to the Google Books API raw data cache

Templates
--------------------
The HTML source is separated from the processing code.
The HTML templates enable easy modification of the output HTML without
modification to the processing code. The templates contain placeholder tags
that enable binding to and dynamic generation of content via the processing code.

As a convention, placeholder tags are in the following form:

    {$placeholderName}

Within the current templates, there exists the following placeholders:

  bookItem.html:        template specific to one of the books in the list (bookItemTmplSrc)
    {$background}       the background color of the book
    {$catalogURI}       the URL to the York Library catalog for the book
    {$thumbnail}        the HTML generated by processing code using the
                        templates from thumbnail1TmplSrc or thumbnail2TmplSrc
    {$callNumber}       the York Library call number for the book
    {$title}            the title of the book
    {$publisher}        the publisher and publishing year of the book
    {$physicalDesc}     the physical description of the book

  post.html:            template specific to the entire post (postTmplSrc)
    {$bookCount}        the number of books in the post
    {$newBookCount}     the HTML generated by the processing code, counting
                        the number of books in the post published in the current year
    {$bookList}         the HTML generated by iterating over the HTML generated by
                        processing code using the templates from bookItemTmplSrc.

  thumb1.html:          template specific to the thumbnail of a specific book if an
                        image has been acquired from Google Books API. (thumbnail1TmplSrc)
    {$thumbnail}        the URL of the image from Google Books.

  thumb2.html:          template specific to the thumbnail of a specific book if no
                        image has been acquired from Google Books API. (thumbnail1TmplSrc)
    {$coverBG}          the background color of the book cover
    {$title}            the title of the book (shortened)
    {$author}           the author of the book (shortened)

Additionally templates in the configuration file are:

  catalogURI:
    {$id}               the book record ID in York Library catalog

  yorklibBiblioUri:
    {$startDate}        the start date-time of the range of the returned data
    {$endDate}          the end date-time of the range of the returned data
    {$start}            the starting row index of the returned data
    {$rows}             the number of rows to return
    {$format}           the returned data format

  googleBooksAPIUri:
    {$format}           the serial number format of the queried book
    {$serial}           the serial number of the queried book
    {$apiKey}           the API key to query Google Books

  yorklibCacheSrc
  googleBooksCacheSrc:
    {$id}               the script run ID

--------------------
End of file
